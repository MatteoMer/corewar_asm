/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   instructions2.c                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: mmervoye <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/01/18 13:05:35 by mmervoye          #+#    #+#             */
/*   Updated: 2019/01/18 20:24:55 by mmervoye         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "asm.h"

int						op_exist(char *name, t_asm *asm_h, t_instruction *new)
{
	int				i;

	i = -1;
	while (asm_h->op[++i].name)
	{
		if (!ft_strncmp(asm_h->op[i].name, name, ft_strlen(asm_h->op[i].name)))
		{
			new->op = &asm_h->op[i];
			return (0);
		}
	}
	return (-1);
}

int						get_type_param(char *param)
{
	param = asm_strnext(param);
	if (*param == DIRECT_CHAR)
		return (T_DIR);
	else if (*param == 'r')
		return (T_REG);
	return (T_IND);
}

int						get_size_param(t_instruction *i, t_params *param)
{
	if (param->type == T_DIR)
		param->size = i->op->dir_size;
	else if (param->type == T_REG)
		param->size = 1;
	else
		param->size = 2;
	return (0);
}

int						check_label_and_size(t_instruction *i, \
		t_params **param)
{
	get_size_param(i, *param);
	if (ft_strchr((*param)->content, LABEL_CHAR))
		(*param)->is_label = 1;
	else
		(*param)->is_label = 0;
	return (0);
}
